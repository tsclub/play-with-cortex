name: cortex_scaling_rules
rules:
- expr: |
    sum by (cluster, namespace, deployment) (
      label_replace(
        kube_deployment_spec_replicas,
        # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
        # always matches everything and the (optional) zone is not removed.
        "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
      )
    )
    or
    sum by (cluster, namespace, deployment) (
      label_replace(kube_statefulset_replicas, "deployment", "$1", "statefulset", "(.*?)(?:-zone-[a-z])?")
    )
  record: cluster_namespace_deployment:actual_replicas:count
- expr: |
    ceil(
      quantile_over_time(0.99,
        sum by (cluster, namespace) (
          cluster_namespace_job:cortex_distributor_received_samples:rate5m
        )[24h:]
      )
      / 240000
    )
  labels:
    deployment: distributor
    reason: sample_rate
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    ceil(
      sum by (cluster, namespace) (cortex_limits_overrides{limit_name="ingestion_rate"})
      * 0.59999999999999998 / 240000
    )
  labels:
    deployment: distributor
    reason: sample_rate_limits
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    ceil(
      quantile_over_time(0.99,
        sum by (cluster, namespace) (
          cluster_namespace_job:cortex_distributor_received_samples:rate5m
        )[24h:]
      )
      * 3 / 80000
    )
  labels:
    deployment: ingester
    reason: sample_rate
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    ceil(
      quantile_over_time(0.99,
        sum by(cluster, namespace) (
          cortex_ingester_memory_series
        )[24h:]
      )
      / 1500000
    )
  labels:
    deployment: ingester
    reason: active_series
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    ceil(
      sum by (cluster, namespace) (cortex_limits_overrides{limit_name="max_global_series_per_user"})
      * 3 * 0.59999999999999998 / 1500000
    )
  labels:
    deployment: ingester
    reason: active_series_limits
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    ceil(
      sum by (cluster, namespace) (cortex_limits_overrides{limit_name="ingestion_rate"})
      * 0.59999999999999998 / 80000
    )
  labels:
    deployment: ingester
    reason: sample_rate_limits
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    ceil(
      (sum by (cluster, namespace) (
        cortex_ingester_tsdb_storage_blocks_bytes{job=~".+/ingester.*"}
      ) / 4)
        /
      avg by (cluster, namespace) (
        memcached_limit_bytes{job=~".+/memcached"}
      )
    )
  labels:
    deployment: memcached
    reason: active_series
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    sum by (cluster, namespace, deployment) (
      label_replace(
        label_replace(
          node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate,
          "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
        ),
        # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
        # always matches everything and the (optional) zone is not removed.
        "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
      )
    )
  record: cluster_namespace_deployment:container_cpu_usage_seconds_total:sum_rate
- expr: |
    # This recording rule is made compatible with the breaking changes introduced in kube-state-metrics v2
    # that remove resource metrics, ref:
    # - https://github.com/kubernetes/kube-state-metrics/blob/master/CHANGELOG.md#v200-alpha--2020-09-16
    # - https://github.com/kubernetes/kube-state-metrics/pull/1004
    #
    # This is the old expression, compatible with kube-state-metrics < v2.0.0,
    # where kube_pod_container_resource_requests_cpu_cores was removed:
    (
      sum by (cluster, namespace, deployment) (
        label_replace(
          label_replace(
            kube_pod_container_resource_requests_cpu_cores,
            "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
          ),
          # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
          # always matches everything and the (optional) zone is not removed.
          "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
        )
      )
    )
    or
    # This expression is compatible with kube-state-metrics >= v1.4.0,
    # where kube_pod_container_resource_requests was introduced.
    (
      sum by (cluster, namespace, deployment) (
        label_replace(
          label_replace(
            kube_pod_container_resource_requests{resource="cpu"},
            "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
          ),
          # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
          # always matches everything and the (optional) zone is not removed.
          "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
        )
      )
    )
  record: cluster_namespace_deployment:kube_pod_container_resource_requests_cpu_cores:sum
- expr: |
    ceil(
      cluster_namespace_deployment:actual_replicas:count
        *
      quantile_over_time(0.99, cluster_namespace_deployment:container_cpu_usage_seconds_total:sum_rate[24h])
        /
      cluster_namespace_deployment:kube_pod_container_resource_requests_cpu_cores:sum
    )
  labels:
    reason: cpu_usage
  record: cluster_namespace_deployment_reason:required_replicas:count
- expr: |
    sum by (cluster, namespace, deployment) (
      label_replace(
        label_replace(
          container_memory_usage_bytes{image!=""},
          "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
        ),
        # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
        # always matches everything and the (optional) zone is not removed.
        "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
      )
    )
  record: cluster_namespace_deployment:container_memory_usage_bytes:sum
- expr: |
    # This recording rule is made compatible with the breaking changes introduced in kube-state-metrics v2
    # that remove resource metrics, ref:
    # - https://github.com/kubernetes/kube-state-metrics/blob/master/CHANGELOG.md#v200-alpha--2020-09-16
    # - https://github.com/kubernetes/kube-state-metrics/pull/1004
    #
    # This is the old expression, compatible with kube-state-metrics < v2.0.0,
    # where kube_pod_container_resource_requests_memory_bytes was removed:
    (
      sum by (cluster, namespace, deployment) (
        label_replace(
          label_replace(
            kube_pod_container_resource_requests_memory_bytes,
            "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
          ),
          # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
          # always matches everything and the (optional) zone is not removed.
          "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
        )
      )
    )
    or
    # This expression is compatible with kube-state-metrics >= v1.4.0,
    # where kube_pod_container_resource_requests was introduced.
    (
      sum by (cluster, namespace, deployment) (
        label_replace(
          label_replace(
            kube_pod_container_resource_requests{resource="memory"},
            "deployment", "$1", "pod", "(.*)-(?:([0-9]+)|([a-z0-9]+)-([a-z0-9]+))"
          ),
          # The question mark in "(.*?)" is used to make it non-greedy, otherwise it
          # always matches everything and the (optional) zone is not removed.
          "deployment", "$1", "deployment", "(.*?)(?:-zone-[a-z])?"
        )
      )
    )
  record: cluster_namespace_deployment:kube_pod_container_resource_requests_memory_bytes:sum
- expr: |
    ceil(
      cluster_namespace_deployment:actual_replicas:count
        *
      quantile_over_time(0.99, cluster_namespace_deployment:container_memory_usage_bytes:sum[24h])
        /
      cluster_namespace_deployment:kube_pod_container_resource_requests_memory_bytes:sum
    )
  labels:
    reason: memory_usage
  record: cluster_namespace_deployment_reason:required_replicas:count
